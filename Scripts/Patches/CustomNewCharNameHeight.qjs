/**************************************************************************\
*                                                                          *
*   Copyright (C) 2018-2021 Andrei Karas (4144)                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANT??ILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144)                                          *
*   Created Date  : 2021-01-23                                             *
*   Last Modified : 2021-03-02                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Change height for UIEditCtrl2 in UINewMakeCharWnd_virt56
///
CustomNewCharNameHeight = function()
{
	/// 1.1 - Find the string PUSH
	let code =
		PUSH(2)          //PUSH 2
	+	PUSH(CNCNH_Addr) //PUSH OFFSET addr ; ASCII "À¯ÀúÀÎÅÍÆäÀÌ½º\\make_character_ver2\\bt_make_press.bmp"
	+	MOV(ECX, R32)    //MOV ECX, reg32_A
	;
	let addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("Reference pattern missing");

	/// 1.2 - Set addr to after the MOV
	addr += code.byteCount();

	/// 1.3 - Find the Height PUSH after it
	let prefix =
		MOV([EBP, WCn], -1)      //MOV DWORD PTR SS:[EBP + var], -1
	;
	let suffix =
		MOV([EBX, POS2WC], EAX)  //MOV DWORD PTR DS:[EBX + const], EAX
	+	CALL(ALLWC)              //CALL UIWindow::Create
	+	MOV(ECX, [EBX, POS2WC])  //MOV ECX, DWORD PTR DS:[EBX + const]
	;
	if (Exe.Version > 11) //VC14.16
	{
		prefix +=
			MOV(ECX, EAX)        //MOV ECX, EAX
		;
		suffix =
			PUSH(WCp)            //PUSH height
		+	PUSH(0x82)           //PUSH 82
		+	suffix
		;
	}
	else
	{
		suffix =
			PUSH(WCp)            //PUSH height
		+	PUSH(0x82)           //PUSH 82
		+	MOV(ECX, EAX)        //MOV ECX, EAX
		+	suffix
		;
	}
	addr = Exe.FindHex(prefix + suffix, addr + 0x100, addr + 0x200);
	if (addr < 0)
		throw Error("Height PUSH missing");

	/// 1.4 - Set addr to the position of the PUSH
	addr += prefix.byteCount();

	/// 2.1 - Extract the current height
	let oldHeight = Exe.GetInt8(addr + 1);

	/// 2.2 - Retrieve the new value from user
    var height = Exe.GetUserInput("$newCharNameHeight", D_Uint8, "Field Height", "Enter new char name height", oldHeight);
    if (height === false)
		Cancel("Height", oldHeight);

	/// 2.3 - Replace the old value
    Exe.SetFromVar(addr + 1, "$newCharNameHeight");

    return true;
};

///
/// \brief Disable for unsupported clients (without the new window)
///
CustomNewCharNameHeight.validate = function()
{
	CNCNH_Addr = Exe.FindText("À¯ÀúÀÎÅÍÆäÀÌ½º\\make_character_ver2\\bt_make_press.bmp");
	return CNCNH_Addr > 0;
};