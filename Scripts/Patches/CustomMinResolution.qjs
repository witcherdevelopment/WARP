/**************************************************************************\
*                                                                          *
*   Copyright (C) 2019-2021 Andrei Karas (4144)                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144)                                          *
*   Created Date  : 2020-11-12                                             *
*   Last Modified : 2021-03-02                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Change the limit values used for comparing resolution.
///
CustomMinResolution = function()
{
	/// 1.1 - Find the location where 'OLD_HEIGHT' is PUSHed
	let code =
		PUSH_0              //PUSH 0
	+	PUSH(CMR_Addr)      //PUSH OFFSET addr ; ASCII "OLD_HEIGHT"
	+	MOV(ECX, R32)       //MOV ECX, reg32
	+	MOV([POS4WC], EAX)  //MOV DWORD PTR DS:[screen_old_width], EAX
	;
	let addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("'OLD_HEIGHT' reference missing");

	/// 1.2 - Save the location after as reference
	let refAddr = addr + code.byteCount();

	/// 1.3 - Set the previous value
	let oldMinW = 0x400;
	let oldMinH = 0x300;

	/// 2.1 - Get the new values from user
	let newMinW = Exe.GetUserInput('$newScreenWidth',  D_Uint32, "Screen Resolution Limit", "Enter the new Minimum Width",  oldMinW, {min:0, max:10000});
	let newMinH = Exe.GetUserInput('$newScreenHeight', D_Uint32, "Screen Resolution Limit", "Enter the new Minimum Height", oldMinH, {min:0, max:10000});
	if (newMinW === false && newMinH === false)
		Cancel("Min Resolution", "1024x768");

	if (newMinW !== false)
	{
		/// 2.2 - Look for comparison against width. Only certain clients have it
		code = 
			CMP(R32, oldMinW)  //CMP reg32, 400 ; usually ECX
		+	JB(0xC)            //JB SHORT addr
		;
		addr = Exe.FindHex(code, refAddr, refAddr + 0x80);

		/// 2.3 - Replace with new width value
		if (addr > 0)
			Exe.SetFromVar(addr + 2, '$newScreenWidth');
	}

	if (newMinH !== false)
	{
		/// 2.4 - Look for comparison against height. Only certain clients have it
		code =
			CMP(EAX, POS2WC)   //CMP EAX, 300 or some lower value
		+	JNB(WCp)           //JNB SHORT addr
		;
		addr = Exe.FindHex(code, refAddr, refAddr + 0x80);

		/// 2.5 - Replace with new height value
		if (addr > 0)
		{
			let diff = Exe.GetUint32(addr + 1) - oldMinH;
			Exe.SetUint32(addr + 1, newMinH + diff);
		}
	}

	/// 2.6 - Look for assignments of width and height
	code = 
		MOV(ECX, oldMinW)      //MOV ECX, 400
	+	MOV(EAX, oldMinH)      //MOV EAX, 300
	;
	addr = Exe.FindHex(code, refAddr, refAddr + 0x80);
	if (addr < 0)
		throw Error("Limit assignments missing");

	/// 2.7 - Replace both
	if (newMinW !== false)
		Exe.SetFromVar(addr + 1, '$newScreenWidth' );

	if (newMinH !== false)
		Exe.SetFromVar(addr + 6, '$newScreenHeight');

	return true;
};

///
/// \brief Disable for old unsupported clients
///
CustomMinResolution.validate = function()
{
	CMR_Addr = Exe.FindText("OLD_HEIGHT");
	return (CMR_Addr > 0);
};