/**************************************************************************\
*                                                                          *
*   Copyright (C) 2020-2021 Andrei Karas (4144)                            *
*   Copyright (C) 2020-2021 X-EcutiOnner (xex.ecutionner@gmail.com)        *
*   Copyright (C) 2019-2021 CH.C (jchcc)                                   *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANT??ILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144), X-EcutiOnner, CH.C (jchcc)              *
*   Created Date  : 2021-01-22                                             *
*   Last Modified : 2021-03-02                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Change the PUSH after comparison to edit value on friends window
///        inside UIMessengerGroupWnd_virt68 function
///
CustomFriendsLimit = function()
{
    /// 1.1 - Search pattern for jump to the friends window
	let code;
	if (Exe.BuildDate > 20170000)
	{
		code =
			MOV(EAX, [EDI, POS1WC]) // 00 mov eax, [edi+98h]
		+	MOV(EAX, [EAX, 0x18])   // 06 mov eax, [eax+18h]
		+	" 99"                   // 09 cdq
		+	IDIV([EDI, POS2WC])     // 10 idiv dword ptr [edi+100h]
		+	MOV([EDI, POS1WC], EAX) // 16 mov [edi+0F8h], eax
		;
	}
	else if (Exe.BuildDate > 20131200)
	{
        code =
			MOV(R32, [R32, POS1WC]) // 00 mov eax, [edi+90h]
		+	MOV(R32, [R32, WCp])    // 06 mov eax, [eax+18h]
		+	" 99"                   // 09 cdq
		+	IDIV(ECX)               // 10 idiv ecx
		+	MOV([R32, POS1WC], R32) // 12 mov [edi+0F0h], eax
		;
	}
	else
	{
		code =
			MOV(R32, [R32, WCp])    // 00 mov edx, [esi+78h]
		+	MOV(R32, [R32, WCp])    // 03 mov eax, [edx+0Ch]
		+   " 99"                   // 06 cdq
		+	IDIV(ECX)               // 07 idiv ecx
		+	MOV([R32, POS1WC], EAX) // 09 mov [esi+0E0h], eax
		;
	}

    let refAddr = Exe.FindHex(code);
    if (refAddr < 0)
        throw Error("Reference pattern missing");

    /// 1.2 - Now find the argument push for the max friends limit
	let prefix = PUSH(0x28);                                    //PUSH 28
	if (Exe.Version > 10) //VC11+
	{
		code =
			PUSH([R32, POS1WC])                                 //PUSH DWORD PTR DS:[reg32_A + const]
		+	(Exe.BuildDate > 20170000 //need to flip the order
		?
			LEA(R32, [EBP, NEG2WC])                             //LEA reg32_B, [EBP - multiByteStr]
		+	PUSH([4, R32, EBP, NEG2WC])                         //PUSH DWORD PTR SS:[4*reg32_C + EBP - var_3c8]
		:
			PUSH([4, R32, EBP, NEG2WC])                         //PUSH DWORD PTR SS:[4*reg32_C + EBP - var_3c8]
		+	LEA(R32, [EBP, NEG2WC])                             //LEA reg32_B, [EBP - multiByteStr]
		)
		;
	}
	else
	{
		code =
			PUSH_R                                              //PUSH reg32_A
		+	PUSH_R                                              //PUSH reg32_B
		+	LEA(R32, ROC.HasFP ? [EBP, NEG2WC] : [ESP, POS2WC]) //LEA reg32_C, [LOCAL.x]
		;
	}
	let suffix = PUSH(CFL_Addr);                                 //PUSH OFFSET addr; ASCII "%s(%d/%d)"

	let addr = Exe.FindHex(prefix + code + suffix, refAddr, refAddr + 0xBC);
	if (addr < 0)
        throw Error("PUSH Pattern missing");

    // if (sprintfOffset[1] === true)
        // logVaFunc("sprintf", offset, sprintfOffset[0]);
    // else
        // logRawFunc("sprintf", offset, sprintfOffset[0]);

    // logVal("max friends count", offset, [repLoc, 1]);

	/// 2.1 - Get the new limit from user
    let value = Exe.GetUserInput("$max_friends", D_Int8, "Max Friends", "Enter Max Friends Limit", 40, {min: 1});
	if (value === false)
		Cancel("Limit", 40);

    /// 2.2 - Replace the 28 with this value.
    Exe.SetFromVar(addr + 1, "$max_friends");

    return true;
};

///
/// \brief Disable for Unsupported Clients - Need the format string
///
CustomFriendsLimit.validate = function()
{
	CFL_Addr = Exe.FindText("%s(%d/%d)");
    return CFL_Addr > 0;
};

// TODO - Not working for clients before 2017

///
/// \brief Find the max party value inside UIMessengerGroupWnd_virt68
///
CustomPartyLimit = function()
{
	/// 1.1 - Find the reference pattern
	let addr = Exe.FindHex( PUSH(0xC9F) );
	if (addr < 0)
		throw Error("Reference pattern missing");

	/// 1.2 - Find the GetNumParty call below it.
	let code =
		MOV(ECX, POS4WC)	// MOV ECX, OFFSET g_session
	+	PUSH(0xC)			// PUSH 0C
	+	CALL()				// CALL CSession_GetNumParty
	;

	addr = Exe.FindHex(code, addr, addr + 0x70);
	if (addr < 0)
		throw Error("GetNumParty CALL missing");

	/// 2.1 - Get new value from user
	let val = Exe.GetUserInput('$max_party_value', D_Uint8, "Party Limit", "Enter Max Party Value", 12, {min:1, max:127});
	if (val === false)
		Cancel("Value", 12);

	/// 2.2 - Replace the value
	Exe.SetFromVar(addr + 6, '$max_party_value');

	return true;
};
