/**************************************************************************\
*                                                                          *
*   Copyright (C) 2014-2021 Neo-Mind                                       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Neo-Mind                                               *
*   Created Date  : 2020-11-08                                             *
*   Last Modified : 2021-01-17                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Find the reference UIWindow creation code and use it to 
///        HideCashShop - NOP out the code for Cash Shop Icon creation (ID = 0xBE) if present before it.
///        ShowCashShop - Inject code for Cash Shop Icon creation (ID = 0xBE) before it if not present.
///
CashShopVis = function(patchName)
{
	/// 1.1 - Ensure the WINMGR object has been loaded
	WINMGR.load();

	/// 1.2 - Find the reference location (where another icon is created)
	let code =
		JNE(0xF)       //JNE SHORT addr; skips to location after the call for creating another icon
	+	PUSH(0x9F)     //PUSH 09F
	+	WINMGR.MovECX  //MOV ECX, OFFSET g_windowMgr
	+	CALL()         //CALL UIWindowMgr::MakeWindow
	;

	let jmpAddr = Exe.FindHex(code);
	if (jmpAddr < 0)
		throw Error("Reference PUSH missing");

	/// 1.3 - Now check if the code for cash shop creation is already present.
	let code2 = 
		PUSH(0xBE)     //PUSH 0BE
	+	WINMGR.MovECX  //MOV ECX, OFFSEET g_windowMgr
	+	CALL()         //CALL UIWindowMgr::MakeWindow
	;
	let addr = Exe.FindHex( code2, jmpAddr - 0x30, jmpAddr );

	if (patchName === "HideCashShop")
	{
		/// 2.1 - For hiding, ensure it is actually present
		if (addr < 0)
			Cancel("Icon is already hidden");

		/// 2.2 - NOP out the creation code
		Exe.SetNOPs(addr, code2.byteCount() + 4);
	}
	else
	{
		/// 3.1 - For showing, ensure it is not already created
		if (addr > 0)
			Cancel("Icon is already shown");

		/// 3.2 - Save the location after the CALL for 0x9F.
		let retnAddr = jmpAddr + code.byteCount() + 4;

		/// 3.3 - Prepare our code to create the icon.
		code += 
			Filler(1)        //Remaining parts are already used for search above
		+	PUSH(0xBE)       //PUSH 0BE ; addr2
		+	WINMGR.MovECX    //MOV ECX, OFFSET g_windowMgr
		+	CALL(Filler(1))  //CALL UIWindowMgr::MakeWindow
		+	JMP(Filler(2))   //JMP retnAddr; jump back to retnAddr
		;

		/// 3.4 - Allocate space to add our code
		let free = Exe.FindSpace(code.byteCount(), 0x10);
		if (free < 0)
			throw NO_ALLOC;

		let freeVir = Exe.Phy2Vir(free, DIFF);

		/// 3.5 - Fill in the Blanks
		code = SetFillTargets(code, {
			1 : WINMGR.MakeWin,
			2 : Exe.Phy2Vir(retnAddr, CODE)
		}, freeVir);

		/// 3.6 - Add the code at the allocated space
		Exe.AddHex(free, code);

		/// 3.7 - Create a jump to it at jmpAddr
		Exe.SetJMP(jmpAddr, freeVir);
	}

	return true;
};

///
/// Disable for unsupported clients (need to have cash shop present)
///
CashShopVis.validate = HasCashShop;

///
/// \brief Wrappers for individual patches
///
HideCashShop = CashShopVis;
ShowCashShop = CashShopVis;
