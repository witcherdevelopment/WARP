/**************************************************************************\
*                                                                          *
*   Copyright (C) ?-2015 Shinryo                                           *
*   Copyright (C) 2013-2021 Neo-Mind                                       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Shinryo, Neo-Mind                                      *
*   Created Date  : 2020-11-10                                             *
*   Last Modified : 2021-03-12                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Change the string used for setting window title to user specified string.
///        New string will be stored in the area currently holding an unused URL
///
CustomWinTitle = function()
{
	/// 1.1 - Find the physical location of the unused URL string
	let free = Exe.FindText("http://ro.hangame.com/login/loginstep.asp?prevURL=/NHNCommon/NHN/Memberjoin.asp", PHYSICAL);
	if (free < 0)
		throw Error("URL not found");

	/// 1.2 - Find the string 'Ragnarok' or 'Ragnarok : Zero'
	let oldTitle = "Ragnarok" + (ROC.IsZero ? " : Zero" : "");
	let addr = Exe.FindText(oldTitle);
	if (addr < 0 && ROC.IsZero)
	{
		oldTitle = "Ragnarok";
		addr = Exe.FindText(oldTitle);
	}
	if (addr < 0)
		throw Error(`'${oldTitle}' not found`);

	/// 1.3 - Find where it is assigned as the title
	let code = MOV( [POS3WC], addr); //MOV DWORD PTR DS:[g_title], OFFSET addr; ASCII "Ragnarok" or "Ragnarok : Zero"

	addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("Title assignment not found");

	/// 2.1 - Get the new title from user
	let varName = '$customWindowTitle';
	let title = Exe.GetUserInput(varName, D_Text, "Client Window Title", "Enter the new title", oldTitle, {minLen:1 , maxLen: 60});//60 because URL is only that long
	if (title === false)
		Cancel("Title", oldTitle);

	/// 2.2 - Overwrite URL with the received string
	Exe.SetFromVar(free, varName);

	/// 2.3 - Update the string reference
	Exe.SetInt32(addr + 6, Exe.Phy2Vir(free));

	return true;
};

///
/// \brief Change the Style parameter used for CreateWindowExA CALL to include WS_SYSMENU
///
EnableSysMenu = function()
{
	/// 1.1 - Find the CreateWindowExA imported function
	let addr = Exe.FindFunc("CreateWindowExA", "USER32.dll");
	if (addr < 0)
		throw Error("CreateWindowExA not found");

	/// 1.2 - Find the locations where it is called
	let addrs = Exe.FindHexN( CALL([addr]) ); //CALL DWORD PTR DS:[<CreateWindowExA>]
	if (addrs.isEmpty())
		throw Error("CreateWindowExA CALLs not found");

	/// 2.1 - Find the one where the client window is created
	///       current style will be 0x02C20000
	let styleAddr = -1;
	let code = PUSH(0x02C20000);

	let found = addrs.find( addr =>
	{
		styleAddr = Exe.FindHex(code, addr - 0x20, addr);
		return (styleAddr > 0);
	});

	if (!found)
		throw Error("Style not PUSHed");

	/// 2.2 - Change 0x02C2 => 0x02C2 | WS_SYSMENU = 0x02CA
	Exe.SetUint8(styleAddr + 3, 0xCA);

	return true;
};

///
/// \brief Disable for old clients which already uses 0x02CA
///
EnableSysMenu.validate = IsPost2010;
